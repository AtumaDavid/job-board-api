// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum UserRole {
  ADMIN
  USER
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
}

enum ApplicationStatus {
  PENDING
  UNDER_REVIEW
  ACCEPTED
  REJECTED
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String        
  email          String        @unique
  password       String
  role           UserRole      @default(USER)
  hashedRefreshToken  String?
  profile        Profile?
  jobListings    JobListing[]  @relation("CreatedBy")
  applications   Application[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Profile {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @unique @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  phoneNumber     String?
  resumeUrl       String?
  profilePictureUrl String?
  workExperience  String?
  skills          String[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model JobListing {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  companyName       String
  description       String
  location          String
  jobType           JobType
  salaryRangeStart  Int?
  salaryRangeEnd    Int?
  applicationDeadline DateTime
  createdById       String        @db.ObjectId
  createdBy         User          @relation("CreatedBy", fields: [createdById], references: [id])
  applications      Application[]
  category          String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
}

model Application {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  jobListingId String     @db.ObjectId
  jobListing   JobListing @relation(fields: [jobListingId], references: [id])
  applicantId  String     @db.ObjectId
  applicant    User       @relation(fields: [applicantId], references: [id])
  status       ApplicationStatus     @default(PENDING) 
  resumeUrl    String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}